{
  "name": "surgeon-stats",
  "version": "0.0.1",
  "description": "Post view stats API",
  "main": "./app/server.js",
  "private": true,
  "config": {
    "imagePort": "3007",
    "dockerRuntimeImageName": "surgeon-post-view-stats",
    "internalContainerPort": "3007"
  },
  "scripts": {
    "start": "nodemon --exec babel-node ./app/server.js --trace-deprecation",
    "test": "echo \"Error: no test specified\" && exit 1",
    "babelVersion": "npx babel --version",
    "babelBuild": "npx babel ./app --out-dir dist --ignore \"node_modules/*\" --copy-files",
    "build": "echo Initiating build",
    "predocker:build": "npm run build",
    "docker:build": "cross-conf-env docker image build . -t $npm_package_name:$npm_package_version --progress=plain ",
    "postdocker:build": "npm run docker:tag",
    "docker:tag": " cross-conf-env docker image tag $npm_package_name:$npm_package_version $npm_package_name:latest",
    "docker:run": "run-s -c docker:runHelper",
    "docker:runHelper": "cross-conf-env docker run -e NODE_ENV=production --name $npm_package_config_dockerRuntimeImageName -d -p $npm_package_config_imagePort:$npm_package_config_internalContainerPort $npm_package_name",
    "predocker:publish": "echo Attention! Ensure `docker login` is correct.",
    "docker:publish": "cross-conf-env docker image push $npm_package_name:$npm_package_version",
    "postdocker:publish": "cross-conf-env docker image push $npm_package_name:latest",
    "docker:clean": "cross-conf-env docker rm -f $npm_package_name:latest $npm_package_name:$npm_package_version",
    "predocker:taillogs": "echo Web Server Logs:",
    "docker:taillogs": "cross-conf-env docker logs -f $npm_package_config_dockerRuntimeImageName",
    "docker:open:win": "echo Trying to launch on Windows && timeout 2 && start http://localhost:%npm_package_config_imagePort%",
    "docker:open:mac": "echo Trying to launch on MacOS && sleep 2 && URL=http://localhost:$npm_package_config_imagePort && open $URL",
    "docker:debugmessage": "echo Docker Debug Completed Successfully! Hit Ctrl+C to terminate log tailing.",
    "predocker:debug": "run-s docker:build docker:run",
    "docker:debug": "run-s -cs docker:open:win docker:open:mac docker:debugmessage docker:taillogs"
  },
  "dependencies": {
    "@aws-sdk/client-cloudwatch-logs": "^3.58.0",
    "aws-sdk": "^2.1102.0",
    "colors": "^1.4.0",
    "compare-versions": "^4.1.3",
    "cors": "^2.8.5",
    "jsonwebtoken": "^8.4.0",
    "debug": "~2.6.9",
    "dotenv": "^16.0.0",
    "express": "~4.17.3",
    "get-routes": "^2.1.5",
    "handlebars": "^4.7.7",
    "http-errors": "~1.6.3",
    "ioredis": "^4.28.2",
    "jade": "~1.11.0",
    "morgan": "~1.9.1",
    "nodemailer": "^6.7.3",
    "pg": "^8.7.3",
    "sequelize": "^6.17.0",
    "uuidv4": "^6.2.13",
    "winston": "^3.6.0",
    "winston-cloudwatch": "^4.0.1",
		"ioredis": "^4.28.2"
  },
  "devDependencies": {
    "@babel/cli": "^7.17.6",
    "@babel/core": "^7.17.7",
    "@babel/node": "^7.16.8",
    "@babel/plugin-transform-modules-commonjs": "^7.17.7",
    "@babel/preset-env": "^7.16.11",
    "cross-conf-env": "^1.2.1",
    "js-beautify": "^1.8.9",
    "nodemon": "^1.18.9",
    "npm-run-all": "^4.1.5"
  },
  "engines": {
    "node": ">=16.0.0"
  },
  "nodemonConfig": {
    "ignore": [
      "**/__tests__/**",
      "*.test.js",
      "*.spec.js",
      "node_modules"
    ],
    "watch": [
      "app"
    ]
  },
  "lint-staged": {
    "**/*.js": "eslint --fix --quiet"
  }
}
